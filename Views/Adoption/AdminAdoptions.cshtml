@model IEnumerable<animal_shelter_app.Models.Adoption>

@{
    ViewData["Title"] = "Pending Applications";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">
            <i class="bi bi-clipboard-check me-2"></i><strong><em>@ViewData["Title"]</em></strong>
        </h2>
    </div>

    @* Alert messages *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-3">Animal</th>
                            <th>User</th>
                            <th>Status</th>
                            <th>Admin Note</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var adoption in Model)
                        {
                            <tr>
                                <td class="ps-3">
                                    @if (adoption.AnimalInformation != null)
                                    {
                                        <a href="@Url.Action("SpecificAnimal", "Animal", new { id = adoption.AnimalId })"
                                           class="text-decoration-none d-flex align-items-center">
                                            <i class="bi bi-clipboard2-heart me-2 text-primary"></i>
                                            <span>@adoption.AnimalInformation.Species - @adoption.AnimalInformation.AnimalId</span>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted"><i class="bi bi-exclamation-circle me-2"></i> Animal Info Not Available</span>
                                    }
                                </td>

                                <td>
                                    <span class="user-details-link text-primary"
                                          style="cursor: pointer;"
                                          data-user-id="@adoption.User?.UserId"
                                          data-user-address="@adoption.UserAddress">
                                        <i class="bi bi-person me-1"></i>@adoption.User?.UserName
                                    </span>
                                </td>
                                <td>
                                    @{
                                        string statusClass = adoption.AdoptionStatus switch
                                        {
                                            "Pending" => "badge rounded-pill bg-warning text-dark",
                                            "Approved" => "badge rounded-pill bg-success",
                                            "Rejected" => "badge rounded-pill bg-danger",
                                            _ => "badge rounded-pill bg-secondary"
                                        };

                                        string statusIcon = adoption.AdoptionStatus switch
                                        {
                                            "Pending" => "bi bi-hourglass-split",
                                            "Approved" => "bi bi-check-circle",
                                            "Rejected" => "bi bi-x-circle",
                                            _ => "bi bi-question-circle"
                                        };
                                    }
                                    <span class="@statusClass">
                                        <i class="@statusIcon me-1"></i>@adoption.AdoptionStatus
                                    </span>
                                </td>
                                <td class="admin-note-col">
                                    @if (adoption.AdoptionStatus == "Pending")
                                    {
                                        <div class="form-floating">
                                            <textarea id="adminNote_@adoption.AdoptionId"
                                                      name="adminNoteTextarea"
                                                      class="admin-note-textarea form-control"
                                                      style="min-height: 80px;"
                                                      placeholder="Add note here..."></textarea>
                                            <label for="adminNote_@adoption.AdoptionId">Admin Note (Optional)</label>
                                        </div>
                                    }
                                    else
                                    {
                                        @if (!string.IsNullOrEmpty(adoption.AdminNote))
                                        {
                                            <div class="p-2 bg-light rounded">@adoption.AdminNote</div>
                                        }
                                        else
                                        {
                                            <span class="text-muted fst-italic">No notes</span>
                                        }
                                    }
                                </td>
                                <td class="text-center">
                                    @if (adoption.AdoptionStatus == "Pending")
                                    {
                                        <div class="btn-group" role="group">
                                            <form asp-action="ApproveAdoption" asp-controller="Adoption" method="post" class="adoption-action-form me-1">
                                                <input type="hidden" name="adoptionId" value="@adoption.AdoptionId" />
                                                <button type="submit" class="btn btn-success btn-sm">
                                                    <i class="bi bi-check-lg me-1"></i>Approve
                                                </button>
                                            </form>
                                            <form asp-action="RejectAdoption" asp-controller="Adoption" method="post" class="adoption-action-form">
                                                <input type="hidden" name="adoptionId" value="@adoption.AdoptionId" />
                                                <button type="submit" class="btn btn-danger btn-sm">
                                                    <i class="bi bi-x-lg me-1"></i>Reject
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@* Enhanced Bootstrap structure for better visualization *@
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="userDetailsModalLabel">
                    <i class="bi bi-person-badge me-2"></i>User Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3" id="loadingSpinner">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading user details...</p>
                </div>
                <div id="userDetailsContent" class="d-none"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x me-1"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                document.addEventListener('DOMContentLoaded', function () {
            // Admin note handling for approval/rejection forms
            const adoptionForms = document.querySelectorAll('.adoption-action-form');
            adoptionForms.forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault(); // Prevent form submission immediately

                    const isApprove = form.action.includes('ApproveAdoption');
                    const row = form.closest('tr');
                    const textarea = row?.querySelector('.admin-note-textarea');

                    // Add admin note to form if present
                    if (textarea) {
                        // Check if hidden input already exists
                        let hidden = form.querySelector('input[name="adminNote"]');
                        if (!hidden) {
                            hidden = document.createElement('input');
                            hidden.type = 'hidden';
                            hidden.name = 'adminNote';
                            form.appendChild(hidden);
                        }
                        hidden.value = textarea.value;
                    }

                    // Remove any existing confirm modal to prevent duplicates
                    const existingModal = document.getElementById('confirmModal');
                    if (existingModal) {
                        existingModal.remove();
                    }

                    // Create confirmation modal
                    const confirmModal = document.createElement('div');
                    confirmModal.classList.add('modal', 'fade');
                    confirmModal.id = 'confirmModal';
                    confirmModal.tabIndex = -1;
                    confirmModal.setAttribute('aria-labelledby', 'confirmModalLabel');
                    confirmModal.setAttribute('aria-hidden', 'true');
                    confirmModal.innerHTML = `
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header ${isApprove ? 'bg-success' : 'bg-danger'} text-white">
                                    <h5 class="modal-title" id="confirmModalLabel">
                                        <i class="bi ${isApprove ? 'bi-check-circle' : 'bi-x-circle'} me-2"></i>
                                        Confirm ${isApprove ? 'Approval' : 'Rejection'}
                                    </h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Are you sure you want to ${isApprove ? 'approve' : 'reject'} this adoption application?</p>
                                    ${textarea && textarea.value ? '<div class="alert alert-info mt-2"><strong>Note:</strong> Your admin note will be saved with this decision.</div>' : ''}
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                        <i class="bi bi-x me-1"></i>Cancel
                                    </button>
                                    <button type="button" class="btn btn-${isApprove ? 'success' : 'danger'}" id="confirmActionBtn">
                                        <i class="bi ${isApprove ? 'bi-check-lg' : 'bi-x-lg'} me-1"></i>
                                        Confirm ${isApprove ? 'Approval' : 'Rejection'}
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;

                    // Append modal to body
                    document.body.appendChild(confirmModal);

                    // Initialize the Bootstrap modal
                    const modalInstance = new bootstrap.Modal(confirmModal);

                    // Show the modal
                    modalInstance.show();

                    // Add event listener to confirm button
                    const confirmBtn = document.getElementById('confirmActionBtn');
                    if (confirmBtn) {
                        confirmBtn.addEventListener('click', function() {
                            // Hide modal and submit form
                            modalInstance.hide();
                            // Add a small timeout to allow modal to hide before submitting
                            setTimeout(() => {
                                form.submit();
                            }, 150);
                        });
                    }

                    // Clean up modal after it's hidden
                    confirmModal.addEventListener('hidden.bs.modal', function() {
                        confirmModal.remove();
                    });
                });
            });

            // User details modal handling
            const userDetailLinks = document.querySelectorAll('.user-details-link');
            const userDetailsModal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
            const userDetailsContent = document.getElementById('userDetailsContent');
            const loadingSpinner = document.getElementById('loadingSpinner');

            userDetailLinks.forEach(link => {
                link.addEventListener('click', function () {
                    const userId = this.getAttribute('data-user-id');
                    const userAddress = this.getAttribute('data-user-address');

                    // Show loading, hide content
                    loadingSpinner.classList.remove('d-none');
                    userDetailsContent.classList.add('d-none');
                    userDetailsModal.show();

                    fetch(`/User/GetUserDetail?userId=${userId}`)
                        .then(response => {
                            if (!response.ok) throw new Error(`HTTP ${response.status}`);
                            return response.json();
                        })
                        .then(data => {
                            // Hide loading, show content
                            loadingSpinner.classList.add('d-none');
                            userDetailsContent.classList.remove('d-none');

                            userDetailsContent.innerHTML = `
                                <div class="card border-0">
                                    <div class="card-body p-0">
                                        <div class="mb-3 text-center">
                                            <div class="avatar-circle mx-auto mb-3">
                                                <i class="bi bi-person-circle fs-1 text-primary"></i>
                                            </div>
                                            <h4>${data.userName || 'N/A'} ${data.userSurname || ''}</h4>
                                        </div>

                                        <div class="list-group list-group-flush">
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <span><i class="bi bi-person-badge me-2"></i>User ID</span>
                                                <span class="badge bg-light text-dark">${data.userId ?? 'N/A'}</span>
                                            </div>
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <span><i class="bi bi-envelope me-2"></i>Email</span>
                                                <span>${data.userEmail || 'N/A'}</span>
                                            </div>
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <span><i class="bi bi-geo-alt me-2"></i>Address</span>
                                                <span>${userAddress || 'N/A'}</span>
                                            </div>
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <span><i class="bi bi-heart me-2"></i>Animals Owned</span>
                                                <span class="badge bg-primary rounded-pill">${data.numberOfAnimalsOwned ?? '0'}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                        })
                        .catch(err => {
                            // Hide loading, show error
                            loadingSpinner.classList.add('d-none');
                            userDetailsContent.classList.remove('d-none');

                            console.error(err);
                            userDetailsContent.innerHTML = `
                                <div class="alert alert-danger">
                                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                    Error loading user details: ${err.message}
                                </div>
                            `;
                        });
                });
            });

            // Add animation to alerts
            const alerts = document.querySelectorAll('.alert');
            setTimeout(() => {
                alerts.forEach(alert => {
                    const bsAlert = new bootstrap.Alert(alert);
                    setTimeout(() => bsAlert.close(), 5000);
                });
            }, 3000);
        });
    </script>
}