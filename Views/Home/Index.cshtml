@model List<animal_shelter_app.Models.AnimalInformation>
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var uniqueSpecies = Model.Select(a => a.Species).Distinct().OrderBy(s => s).ToList();
}
<!-- Fontları ekledim -->
<link href="https://fonts.googleapis.com/css?family=Cardo:400i|Rubik:400,700&display=swap" rel="stylesheet">
<div class="container my-4">
    <style>
        /* Kartlık için CSS */
        :root {
            --d: 700ms;
            --e: cubic-bezier(0.19, 1, 0.22, 1);
            --font-sans: 'Rubik', sans-serif;
            --font-serif: 'Cardo', serif;
        }

        .page-content {
            display: grid;
            grid-gap: 1rem;
            padding: 1rem;
            max-width: 1024px;
            margin: 0 auto;
            font-family: var(--font-sans);
        }

        @@media (min-width: 600px) {
            .page-content {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (min-width: 800px) {
            .page-content {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        .card {
            position: relative;
            display: flex;
            align-items: flex-end;
            overflow: hidden;
            padding: 1rem;
            width: 100%;
            height: 350px;
            text-align: center;
            color: whitesmoke;
            background-color: whitesmoke;
            box-shadow: 0 1px 1px rgba(0,0,0,0.1), 0 2px 2px rgba(0,0,0,0.1), 0 4px 4px rgba(0,0,0,0.1), 0 8px 8px rgba(0,0,0,0.1), 0 16px 16px rgba(0,0,0,0.1);
            border-radius: 10px;
        }

            .card:after {
                content: '';
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 200%;
                pointer-events: none;
                background-image: linear-gradient( to bottom, hsla(0, 0%, 0%, 0) 0%, hsla(0, 0%, 0%, 0.009) 11.7%, hsla(0, 0%, 0%, 0.034) 22.1%, hsla(0, 0%, 0%, 0.072) 31.2%, hsla(0, 0%, 0%, 0.123) 39.4%, hsla(0, 0%, 0%, 0.182) 46.6%, hsla(0, 0%, 0%, 0.249) 53.1%, hsla(0, 0%, 0%, 0.320) 58.9%, hsla(0, 0%, 0%, 0.394) 64.3%, hsla(0, 0%, 0%, 0.468) 69.3%, hsla(0, 0%, 0%, 0.540) 74.1%, hsla(0, 0%, 0%, 0.607) 78.8%, hsla(0, 0%, 0%, 0.668) 83.6%, hsla(0, 0%, 0%, 0.721) 88.7%, hsla(0, 0%, 0%, 0.762) 94.1%, hsla(0, 0%, 0%, 0.790) 100% );
                transform: translateY(-50%);
                transition: transform calc(var(--d) * 2) var(--e);
            }

        .content {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            padding: 1rem;
            transition: transform var(--d) var(--e);
            z-index: 1;
        }

            .content > * + * {
                margin-top: 1rem;
            }

        .title {
            font-size: 1.3rem;
            font-weight: bold;
            line-height: 1.2;
        }

        .copy {
            font-family: var(--font-serif);
            font-size: 1rem;
            font-style: italic;
            line-height: 1.35;
        }

        .btn {
            cursor: pointer;
            margin-top: 1.5rem;
            padding: 0.75rem 1.5rem;
            font-size: 0.65rem;
            font-weight: bold;
            letter-spacing: 0.025rem;
            text-transform: uppercase;
            color: white;
            background-color: black;
            border: none;
            border-radius: 20px;
        }

            .btn:hover {
                background-color: #333;
            }

            .btn:focus {
                outline: 1px dashed yellow;
                outline-offset: 3px;
            }

        

        /* Kart hover efektleri */
        @@media (hover: hover) {
            .card:after {
                transform: translateY(0);
            }

            .content {
                transform: translateY(calc(100% - 4.5rem));
            }

                .content > *:not(.title) {
                    opacity: 0;
                    transform: translateY(1rem);
                    transition: transform var(--d) var(--e), opacity var(--d) var(--e);
                }

            .card:hover,
            .card:focus-within {
                align-items: center;
            }

                .card:hover:after,
                .card:focus-within:after {
                    transform: translateY(-50%);
                }

                .card:hover .content,
                .card:focus-within .content {
                    transform: translateY(0);
                }

                    .card:hover .content > *:not(.title),
                    .card:focus-within .content > *:not(.title) {
                        opacity: 1;
                        transform: translateY(0);
                        transition-delay: calc(var(--d) / 8);
                    }
        }

        /* Filtreleme çubuğu için stil */
        #filterForm .form-select {
            border-radius: 20px;
        }

        #filterForm button {
            border-radius: 20px;
        }

        #clearFiltersBtn {
            border-radius: 20px;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
        }
    </style>

    <form id="filterForm" method="get" action="@Url.Action("Index", "Home")">
        <div class="row align-items-end gy-2">
            <div class="col-sm-3">
                <label for="species" class="form-label">Species</label>
                <select class="form-select" id="species" name="species">
                    <option value="">All</option>
                    @foreach (var species in uniqueSpecies)
                    {
                        <option value="@species">@species</option>
                    }
                </select>
            </div>
            <div class="col-sm-3">
                <label for="neutered" class="form-label">Neutering Status</label>
                <select class="form-select" id="neutered" name="neutered">
                    <option value="">All</option>
                    <option value="true">Neutered</option>
                    <option value="false">Not Neutered</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label for="adopted" class="form-label">Adoption Status</label>
                <select class="form-select" id="adopted" name="adopted">
                    <option value="">All</option>
                    <option value="true">Adopted</option>
                    <option value="false">Not Adopted</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label for="animal_gender" class="form-label">Gender</label>
                <select class="form-select" id="animal_gender" name="animal_gender">
                    <option value="">All</option>
                    <option value="0">Female</option>
                    <option value="1">Male</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label for="disability_status" class="form-label">Disability Status</label>
                <select class="form-select" id="disability_status" name="disability_status">
                    <option value="">All</option>
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label for="chronic_disease_status" class="form-label">Chronic Disease</label>
                <select class="form-select" id="chronic_disease_status" name="chronic_disease_status">
                    <option value="">All</option>
                    <option value="0">Temporary</option>
                    <option value="1">Permanent</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label for="animal_age_range" class="form-label">Age Range</label>
                <select class="form-select" id="animal_age_range" name="animal_age_range">
                    <option value="">All</option>
                    <option value="0-1">0-1</option>
                    <option value="2-3">2-3</option>
                    <option value="4-5">4-5</option>
                    <option value="6-more">6+</option>
                </select>
            </div>
            <div class="col-sm-3 d-flex gap-2">
                <button type="submit" class="btn btn-primary">Apply</button>
                <button type="button" class="btn btn-secondary btn-sm" id="clearFiltersBtn">Clear Filters</button>
            </div>
        </div>
    </form>
</div>
<div class="container">
    <h2 class="text-center mb-4">@ViewBag.Filter</h2>

    @if (Model != null && Model.Any())
    {
        <div class="page-content">
            @foreach (var animal in Model)
            {
                <div class="card" style="@(!string.IsNullOrEmpty(animal.AnimalImage) ? $"background-image: url('{animal.AnimalImage}'); background-size: cover; background-position: center;" : "background-color: #f0f0f0;")">
                    <div class="content">
                        <h2 class="title">@animal.Species</h2>
                        <p class="copy">ID: @animal.AnimalId</p>
                        <p class="copy">Age: @animal.AnimalAge</p>
                        <p class="copy">Gender: @(animal.AnimalGender ? "Female" : "Male")</p>
                        <a asp-action="SpecificAnimal" asp-controller="Animal" asp-route-id="@animal.AnimalId" class="btn">
                            View Details
                        </a>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center text-muted">No animals available.</p>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('filterForm');
        const params = new URLSearchParams(window.location.search);

        form.querySelectorAll('select').forEach(select => {
            const paramValue = params.get(select.name);
            if (paramValue) {
                select.value = paramValue;
            }
        });

        document.getElementById('clearFiltersBtn').addEventListener('click', function() {
            form.querySelectorAll('select').forEach(select => {
                select.value = '';
            });
            form.submit();
        });
    });
</script>