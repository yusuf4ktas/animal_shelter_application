@model animal_shelter_app.Models.User
@{
    ViewData["Title"] = "User Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<style>
    body {
        background-image: url('/images/pawspattern.jpg');
        background-repeat: repeat;
        background-size: contain;
        background-color: #f9f9f9;
    }

    .login-container {
        display: flex;
        width: 900px;
        height: 600px;
        background-color: #fff;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        overflow: hidden;
        margin: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border: 2px solid #c5a880; /* Değiştirildi: pastel kahverengi */
    }

    .login-left, .login-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 30px;
    }

        .login-left img {
            max-width: 100%;
            max-height: 75%;
            border-radius: 12px;
            object-fit: cover;
        }

    .slogan {
        font-style: italic;
        font-size: 30px;
        color: #7f3b1a;
        margin-top: 15px;
        text-align: center;
        max-width: 80%;
    }

    .form-toggle {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin-bottom: 25px;
    }

    .tab-button {
        padding: 10px 25px;
        background-color: #e0e0e0;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
    }

        .tab-button.active {
            background-color: #a9745d; /* Değiştirildi: pastel kahve */
            color: #fff;
        }

    .form-container input, .form-container button {
        width: 100%;
        max-width: 500px;
        padding: 12px;
        margin-bottom: 15px;
        border: none;
        border-bottom: 2px solid #a9745d; /* Değiştirildi: pastel kahve alt çizgi */
        border-radius: 0;
        outline: none;
        transition: border-bottom 0.3s;
    }

        .form-container input:focus {
            border-bottom: 2px solid #8b5e3c; /* Tıklanınca koyu kahve */
        }

    .form-container button {
        background-color: #a9745d; /* Değiştirildi: pastel kahve buton */
        color: #fff;
        cursor: pointer;
        border-radius: 30px;
        padding: 12px;
        transition: background-color 0.3s ease;
    }

        .form-container button:hover {
            background-color: #8b5e3c; /* Hover: koyu kahve tonu */
        }

    .custom-btn {
        background: linear-gradient(135deg, #a9745d, #d7b49e); /* Pastel geçiş */
        border: none;
        color: white;
        font-weight: 600;
        padding: 12px;
        border-radius: 8px;
        transition: 0.3s;
        width: 100%;
    }

        .custom-btn:hover {
            background: linear-gradient(135deg, #8b5e3c, #c5a880); /* Hover geçiş */
        }

    .admin-login {
        display: block;
        margin-top: 10px;
        color: #a9745d; /* Değiştirildi: pastel kahve */
        text-decoration: none;
        text-align: center;
        font-size: 14px;
    }

        .admin-login:hover {
            text-decoration: underline;
        }

    .eye-toggle {
        position: absolute;
        top: 50%;
        right: 10px;
        transform: translateY(-50%);
        font-size: 1.2rem;
        cursor: pointer;
        color: #6c757d;
    }

    .text-danger {
        font-size: 0.875rem;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        margin-top: 15px;
        width: 100%;
        text-align: center;
        border: 1px solid #f5c6cb;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        padding: 10px;
        border-radius: 5px;
        margin-top: 15px;
        width: 100%;
        text-align: center;
        border: 1px solid #c3e6cb;
    }
</style>


<div class="login-container">
    <div class="login-left">
        <img src="/images/userlogin.jpg" alt="Login Image" />
        <div class="slogan">"Behind every happy tail is a hero like you."</div>
    </div>

    <div class="login-right">
        <div class="form-toggle">
            <button id="loginTab" class="tab-button active">Login</button>
            <button id="registerTab" class="tab-button">Register</button>
        </div>

        <!-- LOGIN -->
        <div id="login-form" class="form-container">
            <form method="post" action="@Url.Action("UserLogin", "Account")">
                @Html.AntiForgeryToken()

                <div class="form-floating mb-3">
                    <input type="email" name="email" class="form-control" id="loginEmail" placeholder="Email" required />
                    <label for="loginEmail">Email</label>
                </div>

                <div class="form-floating mb-3 position-relative">
                    <input type="password" name="password" class="form-control" id="loginPassword" placeholder="Password" required />
                    <label for="loginPassword">Password</label>
                    <i class="bi bi-eye eye-toggle" onclick="togglePassword('loginPassword', this)"></i>
                </div>

                <button type="submit" class="custom-btn">Login</button>

                @if (ViewBag.ErrorMessage != null)
                {
                    <div class="alert alert-danger mt-3">@ViewBag.ErrorMessage</div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger mt-3">@TempData["ErrorMessage"]</div>
                }
            </form>

            <a href="@Url.Action("AdminLogin", "Account")" class="admin-login">Log in as admin</a>
        </div>

        <!-- REGISTER -->
        <div id="register-form" class="form-container" style="display:none;">
            <form method="post" asp-action="Register" asp-controller="Account" onsubmit="return validatePassword()">
                @Html.AntiForgeryToken()

                @if (ViewBag.RegistrationSuccess != null)
                {
                    <div class="alert alert-success mb-3">@ViewBag.RegistrationSuccess</div>
                }
                @if (ViewBag.RegistrationError != null)
                {
                    <div class="alert alert-danger mb-3">@ViewBag.RegistrationError</div>
                }
                @if (TempData["RegistrationSuccess"] != null)
                {
                    <div class="alert alert-success mb-3">@TempData["RegistrationSuccess"]</div>
                }
                @if (TempData["RegistrationError"] != null)
                {
                    <div class="alert alert-danger mb-3">@TempData["RegistrationError"]</div>
                }

                <span asp-validation-summary="ModelOnly" class="text-danger mb-2"></span>

                <div class="form-floating">
                    <input asp-for="UserName" class="form-control" placeholder="First Name" />
                    <label for="UserName">First Name</label>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <input asp-for="UserSurname" class="form-control" placeholder="Last Name" />
                    <label for="UserSurname">Last Name</label>
                    <span asp-validation-for="UserSurname" class="text-danger"></span>
                </div>

                <div class="form-floating">
                    <input asp-for="UserEmail" class="form-control" placeholder="Email" />
                    <label for="UserEmail">Email</label>
                    <span asp-validation-for="UserEmail" class="text-danger"></span>
                </div>

                <div class="form-floating position-relative">
                    <input asp-for="UserPassword" type="password" class="form-control" id="UserPassword" placeholder="Password" />
                    <label for="UserPassword">Password</label>
                    <i class="bi bi-eye eye-toggle" onclick="togglePassword('UserPassword', this)"></i>
                    <span asp-validation-for="UserPassword" class="text-danger"></span>
                </div>

                <div class="form-floating position-relative">
                    <input name="confirmPassword" type="password" class="form-control" id="ConfirmPassword" placeholder="Confirm Password" />
                    <label for="ConfirmPassword">Confirm Password</label>
                    <i class="bi bi-eye eye-toggle" onclick="togglePassword('ConfirmPassword', this)"></i>
                    <span id="confirmPasswordError" class="text-danger"></span>
                </div>

                <button type="submit" class="custom-btn">Register</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const loginTab = document.getElementById("loginTab");
        const registerTab = document.getElementById("registerTab");
        const loginForm = document.getElementById("login-form");
        const registerForm = document.getElementById("register-form");

        loginTab.addEventListener("click", function () {
            loginForm.style.display = "block";
            registerForm.style.display = "none";
            loginTab.classList.add("active");
            registerTab.classList.remove("active");
        });

        registerTab.addEventListener("click", function () {
            loginForm.style.display = "none";
            registerForm.style.display = "block";
            registerTab.classList.add("active");
            loginTab.classList.remove("active");
        });

        function togglePassword(fieldId, icon) {
            const field = document.getElementById(fieldId);
            if (field.type === "password") {
                field.type = "text";
                icon.classList.remove("bi-eye");
                icon.classList.add("bi-eye-slash");
            } else {
                field.type = "password";
                icon.classList.remove("bi-eye-slash");
                icon.classList.add("bi-eye");
            }
        }

        function validatePassword() {
            const password = document.getElementById("UserPassword").value;
            const confirmPassword = document.getElementById("ConfirmPassword").value;
            const errorSpan = document.getElementById("confirmPasswordError");

            if (password !== confirmPassword) {
                errorSpan.textContent = "Passwords do not match.";
                return false;
            }

            errorSpan.textContent = "";
            return true;
        }

        // Correctly handle login and registration errors
        document.addEventListener("DOMContentLoaded", function() {
            // Check specifically for registration-related messages
            const hasRegistrationMessages =
                document.querySelector("#register-form .alert-success") !== null ||
                document.querySelector("#register-form .alert-danger") !== null ||
                document.querySelectorAll("#register-form .text-danger:not(:empty)").length > 0;

            // Check specifically for login-related error messages
            const hasLoginErrors =
                document.querySelector("#login-form .alert-danger") !== null;

            // Show appropriate form based on which has messages
            if (hasRegistrationMessages) {
                registerTab.click();
            } else if (hasLoginErrors) {
                loginTab.click();
            }
        });
    </script>

}