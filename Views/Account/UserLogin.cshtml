@model animal_shelter_app.Models.User
@{
    ViewData["Title"] = "User Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .login-container {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        width: 900px;
        height: 600px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        overflow: hidden;
        margin: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .login-left, .login-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
    }

        .login-left img {
            max-width: 100%;
            max-height: 70%;
            object-fit: cover;
            border-radius: 10px;
        }

    .form-container {
        width: 100%;
        max-width: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        .form-container input, .form-container button {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-container button {
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
        }

            .form-container button:hover {
                background-color: #0056b3;
            }

    .admin-login {
        margin-top: 10px;
        color: #007bff;
        text-decoration: none;
        font-size: 14px;
    }

        .admin-login:hover {
            text-decoration: underline;
        }

    /* Toggle switch container */
    .toggle-switch {
        position: relative;
        width: auto;
    }

    /* Hide the checkbox itself */
    .toggle-checkbox {
        display: none;
    }

    /* The slider background */
    .toggle-slider {
        position: relative;
        width: 50px;
        height: 25px;
        background-color: #ccc;
        border-radius: 25px;
        cursor: pointer;
        transition: background-color 0.3s;
        display: inline-block;
    }

        /* The round handle */
        .toggle-slider::after {
            content: "";
            position: absolute;
            top: 2px;
            left: 2px;
            width: 21px;
            height: 21px;
            background-color: #fff;
            border-radius: 50%;
            transition: transform 0.3s;
        }

    /* When checkbox is checked => move handle to the right, color the background */
    .toggle-checkbox:checked + .toggle-slider {
        background-color: #0d6efd; 
    }

        .toggle-checkbox:checked + .toggle-slider::after {
            transform: translateX(25px);
        }

    /* Label text styling */
    .toggle-label {
        font-weight: 600;
        cursor: pointer;
        user-select: none;
    }
</style>

<div class="login-container">
    <!-- Left Side: Image-->
    <div class="login-left">
        <img src="/images/login_image.jpg" alt="Login Image" />
        <div class="slogan">“Great happiness with little paws!”</div>
    </div>

    <div class="login-right">
        <!-- Toggle Switch for Login/Register -->
        <div class="toggle-switch d-flex align-items-center justify-content-center mb-3">
            <span class="toggle-label me-2" id="toggleLoginLabel">Login</span>

            <!-- Hidden checkbox controlling the toggle -->
            <input type="checkbox" id="loginRegisterToggle" class="toggle-checkbox" checked />

            <!-- The visible slider -->
            <label for="loginRegisterToggle" class="toggle-slider"></label>

            <span class="toggle-label ms-2" id="toggleRegisterLabel">Register</span>
        </div>

        <!-- Login Form -->
        <div id="login-form" class="form-container">
            <h2>Login</h2>
            <form method="post" action="@Url.Action("UserLogin", "Account")">
                @Html.AntiForgeryToken() <!-- CSRF koruması -->
                <input type="email" name="email" placeholder="Email" required />
                <input type="password" name="password" placeholder="Password" required />
                <button type="submit">Login</button>
            </form>

            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger mt-3">@ViewBag.ErrorMessage</div>
            }

            <a href="@Url.Action("AdminLogin", "Account")" class="admin-login">Log in as admin</a>
        </div>

        <!-- Register Form -->
        <div id="register-form" class="form-container" style="display:none;">
            <h2>Register</h2>
            <form method="post" asp-action="Register" asp-controller="Account" onsubmit="return validatePassword()">
                @Html.AntiForgeryToken()
                <span asp-validation-summary="ModelOnly" class="text-danger mb-2"></span>

                <input asp-for="UserName" placeholder="First Name" class="form-control mb-2" />
                <span asp-validation-for="UserName" class="text-danger"></span>

                <input asp-for="UserSurname" placeholder="Last Name" class="form-control mb-2" />
                <span asp-validation-for="UserSurname" class="text-danger"></span>

                <input asp-for="UserEmail" placeholder="Email" class="form-control mb-2" />
                <span asp-validation-for="UserEmail" class="text-danger"></span>

                <input asp-for="UserPassword" type="password" placeholder="Password" class="form-control mb-2" id="UserPassword" />
                <span asp-validation-for="UserPassword" class="text-danger"></span>

                <input name="confirmPassword" type="password" placeholder="Confirm Password" class="form-control mb-2" id="ConfirmPassword" />
                <span id="confirmPasswordError" class="text-danger"></span>

                <button type="submit" class="btn btn-primary w-100">Register</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
                const toggle = document.getElementById("loginRegisterToggle");
                const loginForm = document.getElementById("login-form");
                const registerForm = document.getElementById("register-form");

                loginForm.style.display = "block";
                registerForm.style.display = "none";

                // When toggling
                toggle.addEventListener("change", function () {
                    if (this.checked) {
                        // Show register, hide login
                        loginForm.style.display = "none";
                        registerForm.style.display = "block";
                    } else {
                        // Show login, hide register
                        loginForm.style.display = "block";
                        registerForm.style.display = "none";
                    }
                });

        function validatePassword() {
            const password = document.getElementById("UserPassword").value;
            const confirmPassword = document.getElementById("ConfirmPassword").value;
            const errorSpan = document.getElementById("confirmPasswordError");

            if (password !== confirmPassword) {
                errorSpan.textContent = "Passwords do not match.";
                return false;
            }

            errorSpan.textContent = "";
            return true;
        }
    </script>
}